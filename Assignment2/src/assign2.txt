Script started on Wed 20 Nov 2019 06:51:43 PM EST
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ cat Item.j[K[K[K[K[K[K[K Ass2/Item.java
//Blair Cosgrove (104992533)
//Assignment 2
//11/17/2019

package Ass2;

import java.util.Scanner;

public abstract class Item {
	private static int item_id = 0; 	//	Positive integer.
	private double price;				//	Positive number.
	public int quantity;				//	Holds the number of that item in that inventory.
	private String title;				//	Can't be empty
	
	//	Overloadeded constructor.
	public Item(double price, int quantity, String title) throws InvalidTitleException, InvalidPriceException
	{
		if (title.length() == 0) throw new InvalidTitleException("No title");
		if (price < 0) throw new InvalidPriceException("Negative price");
		
		item_id += 1;
		this.price = price;
		this.quantity = quantity;
		this.title = title;
		
	}
	
	//	Abstract method to display an item.
	public abstract void Display();
	
	//	Abstract method to recieve what object each element in the list is (1 for book, 2 for gift card, 3 for Shoe).
	public abstract int getType();
	
	/**
	 * Gets the quantity from the user.
	 * @return A integer for quantity recieved.
	 */
	public static int Purchase()
	{
		Scanner sc = new Scanner(System.in);
		System.out.print("Enter quantity to purchase: ");
		int quan = sc.nextInt();
		return quan;
	}
	
	/**
	 * Returns the price.
	 * @return double price.
	 */
	public double getPrice()
	{
		return price;
	}
	
	/**
	 * Returns the quantity.
	 * @return integer quantity.
	 */
	public int getQuantity()
	{
		return quantity;
	}
	
	/**
	 * Returns the title.
	 * @return String title.
	 */
	public String getTitle()
	{
		return title;
	}
}
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ cat Ass2/Book.java
//Blair Cosgrove (104992533)
//Assignment 2
//11/17/2019

package Ass2;

public class Book extends Item implements Comparable<Book>{
	public String Author;	//	Holds the Authors name.
	private String Title;	//	Holds the book's title.
	private int Year;		//	Holds the year published.
	
	//	Overloaded constructor.
	public Book(double price, int quantity, String title, String Author, String Title, int Year) throws InvalidTitleException, InvalidPriceException {
		super(price, quantity, title);
		this.Author = Author;
		this.Title = Title;
		this.Year = Year;
	}

	/**
	 * Prints this type of item.
	 */
	public void Display() 
	{
		System.out.println("Type: Book");
		System.out.println("Price: $" + getPrice());
		System.out.println("Quantity: " + getQuantity());
		System.out.println("title: " + getTitle());
		System.out.println("Author: " + Author);
		System.out.println("Book title: " + Title);
		System.out.println("year: " + Year);
	}

	/**
	 * Identifies the item.
	 */
	public int getType() 
	{
		return 1;
	}

	@Override
	public int compareTo(Book o) 
	{
		if (this.Author.compareTo(o.Author) > 0)
			return 1;
		else if(this.Author.compareTo(o.Author) < 0)
			return -1;
		else
			return 0;
	}

}
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ cat Ass2/GiftCard.java
//Blair Cosgrove (104992533)
//Assignment 2
//11/17/2019

package Ass2;

public class GiftCard extends Item implements Comparable<GiftCard>{
	private String label;			//	Holds a label for the gift card.
	private String manufacturer;	//	Holds the name of the manufacturer.
	
	//	Overloaded constructor.
	public GiftCard(double price, int quantity, String title, String label, String manufacturer) throws InvalidTitleException, InvalidPriceException 
	{
		super(price, quantity, title);
		this.label = label;
		this.manufacturer = manufacturer;
	}

	/**
	 * Prints this type of item.
	 */
	public void Display() 
	{
		System.out.println("Type: Gift Card");
		System.out.println("Price: $" + getPrice());
		System.out.println("Quantity: " + getQuantity());
		System.out.println("Title: " + getTitle());
		System.out.println("Label: " + label);
		System.out.println("Manufacturer: " + manufacturer);
	}

	/**
	 * Identifies the type of item.
	 */
	public int getType() 
	{
		return 2;
	}


	@Override
	public int compareTo(GiftCard o)
	{
		if (this.label.compareTo(o.label) > 0)
			return 1;
		else if(this.label.compareTo(o.label) < 0)
			return -1;
		else
			return 0;
	}

}
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ cat Ass2/Shoe.java
//Blair Cosgrove (104992533)
//Assignment 2
//11/17/2019

package Ass2;

public class Shoe extends Item implements Comparable<Shoe>{
	private String colour;	//	must be white, silver, red, beige, brown, blue, black, pink.	
	public double size;		//	Holds the shoes size.
	
	//	Overloaded constructor.
	public Shoe(double price, int quantity, String title, String colour, double size) throws InvalidTitleException, InvalidPriceException, InvalidColourException {
		super(price, quantity, title);
		if (!colour.equals("white") && !colour.equals("silver") && !colour.equals("red") && !colour.equals("beige") && !colour.equals("brown") && !colour.equals("blue") && !colour.equals("black") && !colour.equals("pink"))
			throw new InvalidColourException(colour);
		this.colour = colour;
		this.size = size;
	}

	/**
	 * Prints this type of item.
	 */
	public void Display() 
	{
		System.out.println("Type: Shoe");
		System.out.println("Price: $" + getPrice());
		System.out.println("Quantity: " + getQuantity());
		System.out.println("Title: " + getTitle());
		System.out.println("Colour: " + colour);
		System.out.println("Size: " + size);
	}

	/**
	 * 
	 * @param colour
	 * @return
	 */
	public boolean isValidColour(String colour)
	{
		return true;
	}
	
	/**
	 * Identifies the type of item.
	 */
	public int getType() 
	{
		return 3;
	}

	@Override
	public int compareTo(Shoe o) 
	{
		if (this.size > o.size)
			return 1;
		else if(this.size < o.size)
			return -1;
		else
			return 0;
	}

}
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ cat Ass2/MyeStore.java
//Blair Cosgrove (104992533)
//Assignment 2
//11/17/2019

package Ass2;

import java.util.*;

public class MyeStore {

	public static void main(String[] args) throws InvalidTitleException, InvalidPriceException, InvalidColourException {
		ArrayList<Item> cart = new ArrayList<Item>();	//	Holds all items added to cart
		ArrayList<Item> toSort = new ArrayList<Item>();	//	Used for holding temporary values for sorting an output
		Scanner sc = new Scanner(System.in);
		int input;										//	Holds the users input.
		
		//	Loop to continue asking the user for an input until they are done.
		do
		{
			System.out.println("\n-------------MENU-------------");
			System.out.println("0: Add Item to the inventory");
			System.out.println("1: Display all items");
			System.out.println("2: Display only books sorted by author name");
			System.out.println("3: Display only gifts sorted by label");
			System.out.println("4: Display only shoes sorted by size");
			System.out.println("5: Delete an item by item id");
			System.out.println("6: Purchase an item by removing the purchased quantity from the inventory");
			System.out.println("-1: Exit");
			System.out.println("------------------------------");
			System.out.print("\nEnter Number > ");
			
			input = sc.nextInt();
			
			//	Determine what to do depending on the user's input.
			switch (input)
			{
				case -1:
					//	Exits program
					System.out.println("Goodbye...");
					break;
				case 0:
					System.out.print("Type of item (1 = Book, 2 = Gift Card, 3 = Shoe): ");
					int type = sc.nextInt();
					
					//	Check if valid input.
					if(type != 1 && type != 2 && type != 3)
					{
						System.out.println("Invalid type.");
						break;
					}
					
					System.out.print("Enter price: ");
					double price = sc.nextDouble();
					System.out.print("Enter quantity: ");
					int quantity = sc.nextInt();
					sc.nextLine();
					System.out.print("Enter title: ");
					String t1 = sc.nextLine();
					
					switch (type)
					{
						//	For book input
						case 1:
							System.out.print("Enter author's name: ");
							String name = sc.nextLine();
							System.out.print("Enter book's name: ");
							String t2 = sc.nextLine();
							System.out.print("Enter year: ");
							int year = sc.nextInt();
							
							try
							{
								Book b = new Book(price, quantity, t1, name, t2, year);
								cart.add(b);
							}
							catch(InvalidPriceException ipe)
							{
								System.err.print(ipe);
							}
							catch(InvalidTitleException ite)
							{
								System.err.print(ite);
							}
							
							break;
						//	For gift card input.
						case 2:
							System.out.print("Enter label: ");
							String label = sc.nextLine();
							System.out.print("Enter manufacturer: ");
							String manufacturer = sc.nextLine();
							
							try
							{
								GiftCard g = new GiftCard(price, quantity, t1, label, manufacturer);
								cart.add(g);
							}
							catch(InvalidPriceException ipe)
							{
								System.err.print(ipe);
							}
							catch(InvalidTitleException ite)
							{
								System.err.print(ite);
							}
							
							break;
						//	For shoe input.
						case 3:
							System.out.print("Enter colour: ");
							String colour = sc.nextLine();
							System.out.print("Enter size: ");
							double size = sc.nextDouble();
							
							try
							{
								Shoe s = new Shoe(price, quantity, t1, colour, size);
								cart.add(s);
							}
							catch(InvalidPriceException ipe)
							{
								System.err.print(ipe);
							}
							catch(InvalidTitleException ite)
							{
								System.err.print(ite);
							}
							catch(InvalidColourException ice)
							{
								System.err.print(ice);
							}
							
							break;
					}
					
					break;
					
				case 1:
					//	Print the contents of the arrayList.
					for (int i = 0; i < cart.size(); i++)
					{
						System.out.println("Item #" + (i + 1));
						cart.get(i).Display();
						System.out.println("\n");
					}
					
					break;
					
				case 2:
					//	Print Books sorted by Author.
					for(int j = 0; j < cart.size(); j++)
					{
						if (cart.get(j).getType() == 1)
							toSort.add((Book) cart.get(j));
					}
					
					toSort.sort(null);
					
					for(int j = 0; j < toSort.size(); j++)
					{
						toSort.get(j).Display();
						System.out.println("");
					}
					
					toSort.clear();
					break;
					
				case 3:
					//	Print Gift Cards sorted by Label
					for(int k = 0; k < cart.size(); k++)
					{
						if (cart.get(k).getType() == 2)
							toSort.add((GiftCard) cart.get(k));
					}
					
					toSort.sort(null);
					
					for(int k = 0; k < toSort.size(); k++)
					{
						toSort.get(k).Display();
						System.out.println("");
					}
					
					toSort.clear();
					break;
					
				case 4:
					//	Print shoes sorted by size
					for(int l = 0; l < cart.size(); l++)
					{
						if (cart.get(l).getType() == 3)
							toSort.add((Shoe) cart.get(l));
					}
					
					toSort.sort(null);
					
					for(int l = 0; l < toSort.size(); l++)
					{
						toSort.get(l).Display();
						System.out.println("");
					}
					
					toSort.clear();
					break;
					
				case 5:
					//	Deletes a certain id from the arrayList
					System.out.print("Enter id to delete (First element = 1, " + cart.size() + " elements in the cart): ");
					int toDelete = sc.nextInt();
					
					if (toDelete >= cart.size())
					{
						System.out.println("Invalid id.");
						break;
					}
					
					cart.remove(toDelete - 1);
					break;
					
				case 6:
					//	Purchases  quantity
					System.out.print("Enter id of item to purchase (First element = 1, " + cart.size() + " elements in the cart): ");
					int num = sc.nextInt() - 1;
					
					//	Check if it is a valid id.
					if (num >= cart.size())
					{
						System.out.println("Invalid id.");
						break;
					}
					
					//	Get quantity from user.
					int quan = Item.Purchase();
					
					//	Check if valid quantity
					if (quan > cart.get(num).quantity)
					{
						System.out.println("There are not that many in the cart.");
						break;
					}
					
					//	If Item = 0 quantity, it is removed from the cart.
					cart.get(num).quantity -= quan;
					if (cart.get(num).quantity == 0)
						cart.remove(num);
					
					break;
					
				default:
					System.out.println("Invalid Input");
			}
		}
		while(input != -1);
		
		sc.close();
	}

}]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ cat Ass2/Ina[KvalidColourException.java
//Blair Cosgrove (104992533)
//Assignment 2
//11/17/2019

package Ass2;

public class InvalidColourException extends Exception {
	public InvalidColourException(String colour)
	{
		super(colour); 
	}
}
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ cat Ass2/InvalidColourException.java[1PException.java[1PException.java[1PException.java[1PException.java[1PException.java[1PException.javaPException.javarException.javaiException.javacException.javaeException.java
//Blair Cosgrove (104992533)
//Assignment 2
//11/17/2019

package Ass2;

public class InvalidPriceException extends Exception{
	public InvalidPriceException(String price)
	{
		super(price);
	}
}
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ cat Ass2/InvalidPriceException.java[1PException.java[1PException.java[1PException.java[1PException.java[1PException.javaTException.javaiException.javatException.javalException.javaeException.java
//Blair Cosgrove (104992533)
//Assignment 2
//11/17/2019

package Ass2;

public class InvalidTitleException extends Exception{
	public InvalidTitleException(String title)
	{
		super(title);
	}
}
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ javac Ass2/MyeStore.java
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ java Ass22[K.MyeStore

-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 0' 
Type of item (1 = Book, 2 = Gift Card, 3 = Shoe): 1
Enter price: 15
Enter quantity: 2
Enter title: Book 1
Enter author's name: Blair Cosgrove
Enter book's name: Pretty Women
Enter year: 2000

-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 0
Type of item (1 = Book, 2 = Gift Card, 3 = Shoe): 2
Enter price: 50
Enter quantity: 1
Enter title: GiftCard 1
Enter label: Birthday
Enter manufacturer: Best Buy

-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 0
Type of item (1 = Book, 2 = Gift Card, 3 = Shoe): 3
Enter price: 100
Enter quantity: 1
Enter title: Shoe 1
Enter colour: blue
Enter size: 15

-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 0
Type of item (1 = Book, 2 = Gift Card, 3 = Shoe): 1
Enter price: 50
Enter quantity: 1
Enter title: H Book 2
Enter author's name: Hailey T
Enter book's name: I am the Best
Enter year: 2999

-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 0
Type of item (1 = Book, 2 = Gift Card, 3 = Shoe): 2
Enter price: 150
Enter quantity: 1
Enter title: GiftCard 2
Enter label: Christmas
Enter manufacturer: Taco Bell

-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 0
Type of item (1 = Book, 2 = Gift Card, 3 = Shoe): 3
Enter price: 200
Enter quantity: 1
Enter title: Shoe 2
Enter colour: pink
Enter size: 8

-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 1
Item #1
Type: Book
Price: $15.0
Quantity: 2
title: Book 1
Author: Blair Cosgrove
Book title: Pretty Women
year: 2000


Item #2
Type: Gift Card
Price: $50.0
Quantity: 1
Title: GiftCard 1
Label: Birthday
Manufacturer: Best Buy


Item #3
Type: Shoe
Price: $100.0
Quantity: 1
Title: Shoe 1
Colour: blue
Size: 15.0


Item #4
Type: Book
Price: $50.0
Quantity: 1
title: Book 2
Author: Hailey T
Book title: I am the Best
year: 2999


Item #5
Type: Gift Card
Price: $150.0
Quantity: 1
Title: GiftCard 2
Label: Christmas
Manufacturer: Taco Bell


Item #6
Type: Shoe
Price: $200.0
Quantity: 1
Title: Shoe 2
Colour: pink
Size: 8.0



-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 2
Type: Book
Price: $15.0
Quantity: 2
title: Book 1
Author: Blair Cosgrove
Book title: Pretty Women
year: 2000

Type: Book
Price: $50.0
Quantity: 1
title: Book 2
Author: Hailey T
Book title: I am the Best
year: 2999


-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 3
Type: Gift Card
Price: $50.0
Quantity: 1
Title: GiftCard 1
Label: Birthday
Manufacturer: Best Buy

Type: Gift Card
Price: $150.0
Quantity: 1
Title: GiftCard 2
Label: Christmas
Manufacturer: Taco Bell


-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 4
Type: Shoe
Price: $200.0
Quantity: 1
Title: Shoe 2
Colour: pink
Size: 8.0

Type: Shoe
Price: $100.0
Quantity: 1
Title: Shoe 1
Colour: blue
Size: 15.0


-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 5
Enter id to delete (First element = 1, 6 elements in the cart): 1

-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 1
Item #1
Type: Gift Card
Price: $50.0
Quantity: 1
Title: GiftCard 1
Label: Birthday
Manufacturer: Best Buy


Item #2
Type: Shoe
Price: $100.0
Quantity: 1
Title: Shoe 1
Colour: blue
Size: 15.0


Item #3
Type: Book
Price: $50.0
Quantity: 1
title: Book 2
Author: Hailey T
Book title: I am the Best
year: 2999


Item #4
Type: Gift Card
Price: $150.0
Quantity: 1
Title: GiftCard 2
Label: Christmas
Manufacturer: Taco Bell


Item #5
Type: Shoe
Price: $200.0
Quantity: 1
Title: Shoe 2
Colour: pink
Size: 8.0



-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 6
Enter id of item to purchase (First element = 1, 5 elements in the cart): 1
Enter quantity to purchase: 1

-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > 1
Item #1
Type: Shoe
Price: $100.0
Quantity: 1
Title: Shoe 1
Colour: blue
Size: 15.0


Item #2
Type: Book
Price: $50.0
Quantity: 1
title: Book 2
Author: Hailey T
Book title: I am the Best
year: 2999


Item #3
Type: Gift Card
Price: $150.0
Quantity: 1
Title: GiftCard 2
Label: Christmas
Manufacturer: Taco Bell


Item #4
Type: Shoe
Price: $200.0
Quantity: 1
Title: Shoe 2
Colour: pink
Size: 8.0



-------------MENU-------------
0: Add Item to the inventory
1: Display all items
2: Display only books sorted by author name
3: Display only gifts sorted by label
4: Display only shoes sorted by size
5: Delete an item by item id
6: Purchase an item by removing the purchased quantity from the inventory
-1: Exit
------------------------------

Enter Number > -1
Goodbye...
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ la [K[Ks -l
total 27
drwxr-xr-x 2 cosgrovb temp    18 Nov 20 18:30 [0m[01;34mAss2[0m
-rw-r--r-- 1 cosgrovb temp 24576 Nov 20 18:57 assign2.txt
-rw-r--r-- 1 cosgrovb temp    23 Nov 12 14:59 module-info.java
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src[00m$ cd Ass2
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src/Ass2[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src/Ass2[00m$ la[Ks -l
total 38
-rw-r--r-- 1 cosgrovb temp 1723 Nov 20 18:30 Book.class
-rw-r--r-- 1 cosgrovb temp 1261 Nov 19 17:32 Book.java
-rw-r--r-- 1 cosgrovb temp 1667 Nov 20 18:30 GiftCard.class
-rw-r--r-- 1 cosgrovb temp 1224 Nov 19 17:32 GiftCard.java
-rw-r--r-- 1 cosgrovb temp  249 Nov 20 18:26 InvalidColourException.class
-rw-r--r-- 1 cosgrovb temp  213 Nov 17 21:08 InvalidColourException.java
-rw-r--r-- 1 cosgrovb temp  247 Nov 20 18:26 InvalidPriceException.class
-rw-r--r-- 1 cosgrovb temp  207 Nov 17 21:08 InvalidPriceException.java
-rw-r--r-- 1 cosgrovb temp  247 Nov 20 18:26 InvalidTitleException.class
-rw-r--r-- 1 cosgrovb temp  207 Nov 17 21:08 InvalidTitleException.java
-rw-r--r-- 1 cosgrovb temp 1321 Nov 20 18:30 Item.class
-rw-r--r-- 1 cosgrovb temp 1627 Nov 19 22:12 Item.java
-rw-r--r-- 1 cosgrovb temp 4989 Nov 20 18:53 MyeStore.class
-rw-r--r-- 1 cosgrovb temp 6681 Nov 20 18:19 MyeStore.java
-rw-r--r-- 1 cosgrovb temp 1965 Nov 20 18:30 Shoe.class
-rw-r--r-- 1 cosgrovb temp 1551 Nov 19 17:32 Shoe.java
]0;cosgrovb@charlie: ~/COMP2120/Assignment2/src/Ass2[01;32mcosgrovb@charlie[00m:[01;34m~/COMP2120/Assignment2/src/Ass2[00m$ exitt[K
exit

Script done on Wed 20 Nov 2019 06:58:12 PM EST
